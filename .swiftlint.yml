# SwiftLint configuration file
# See all rules at https://github.com/realm/SwiftLint/blob/master/Rules.md
disabled_rules: # rule identifiers to exclude from running
  - trailing_whitespace
  - todo
  - unavailable_function
  - inclusive_language
  - redundant_type_annotation
  - force_unwrapping
  - implicitly_unwrapped_optional
opt_in_rules: # some rules are only opt-in
  - anyobject_protocol
  - array_init
  - closure_body_length
  - closure_parameter_position
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - conditional_returns_on_newline
  - contains_over_first_not_nil
  - convenience_type
  - empty_count
  - empty_string
  - explicit_init
  - explicit_self
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - first_where
  - for_where
  - function_default_parameter_at_end
  - identical_operands
  - implicit_return
  - joined_default_parameter
  - last_where
  - legacy_multiple
  - legacy_random
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - multiline_arguments
  - multiline_function_chains
  - multiline_parameters
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefixed_toplevel_constant
  - private_action
  - private_outlet
  - prohibited_super_call
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  - required_enum_case
  - sorted_first_last
  - static_operator
  - strict_fileprivate
  - switch_case_on_newline
  - toggle_bool
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - unowned_variable_capture
  - untyped_error_in_catch
  - unused_capture_list
  - unused_closure_parameter
  - unused_control_flow_label
  - unused_enumerated
  - unused_declaration
  - unused_import
  - unused_optional_binding
  - unused_setter_value
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_between_cases
  - vertical_whitespace_closing_braces
  - xct_specific_matcher
  - yoda_condition

custom_rules:
  empty_line_after_multiline_guard:
    name: "Empty Line After Guard"
    regex: '(^ *guard[ a-zA-Z0-9=?.\(\),><!]*\{[ a-zA-Z0-9=?.\(\)\n,><!]*\}\n *(?!(?:return|guard))\S+)'
    message: "There should be an empty line after a guard"
    severity: warning
  # Find all the available rules by running:
  # swiftlint rules
included: # paths to include during linting. `--path` is ignored if present.
  

excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Pods
  - TicTacToeMCTSTests
 
# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 160
# they can set both implicitly with an array
type_body_length:
  - 128 # warning
  - 256 # error
# or they can set both explicitly
function_body_length:
  - 40 # warning
  - 50 # error
file_length:
  warning: 500
  error: 1200
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 4 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded:
    - iPhone # excluded via string
identifier_name:
  min_length: # only min_length
    error: 4 # only error
  excluded: # excluded via string array
    - id

reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji)
